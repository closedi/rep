{"version":3,"sources":["components/Game/DoorGame/Door/Door.js","components/utils/utils.js","components/Game/DoorGame/DoorField.js","components/Game/ToggleButton/ToggleButton.js","components/Game/HowToPlay/HowToPlay.js","components/Game/Game.js","reportWebVitals.js","index.js","components/Game/DoorGame/Door/Door.module.css","components/Game/HowToPlay/HowToPlay.module.css"],"names":["Door","props","useState","styles","door","styleCl","setStyleCl","useEffect","isChosen","gameResult","door_chosen","isTrue","door_opened_good","door_opened_bad","isOpened","handleClass","className","onClick","id","shuffle","numPool","j","x","i","length","parseInt","Math","random","map","value","DoorField","state","trueArr","moveConfirmed","openCount","roundsCount","prevProps","prevState","snapshot","this","checkWinner","slice","fill","setState","includes","e","key","confirmAction","openFalseDoor","clearRound","falseDoorArr","count","result","Array","handleClick","tabIndex","onKeyDown","confirmActionOnKey","align","toUpperCase","main","doorField","renderDoor","doorButton","style","margin","textAlign","React","Component","ToggleButton","name","autoFocus","HowToPlay","closed","frame","close","setClosed","frame_closed","button_open","console","log","wrapper","button_close","moveList","Game","countRounds","setCountRounds","resultCounter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5a3c3518.chunk.js","sourcesContent":["import styles from './Door.module.css';\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction Door(props) {\r\n\r\n  let [styleCl, setStyleCl] = useState(styles.door)\r\n\r\n  useEffect(() => {\r\n    setStyleCl(styleCl = handleClass())\r\n  },[[props.isChosen, props.isOpened]])\r\n\r\n\r\n\r\n  function handleClass() {\r\n    if (props.isChosen === true && props.gameResult === 'none') {\r\n     styleCl = styles.door_chosen\r\n    } else if (props.isChosen === true && props.gameResult !== 'none') {\r\n        styleCl = (props.isTrue) ? styles.door_opened_good : styles.door_opened_bad\r\n    } else if (props.isOpened === 'open' && props.isTrue) {\r\n      styleCl = styles.door_opened_good\r\n    } else if (props.isOpened === 'open' && !props.isTrue) {\r\n      styleCl = styles.door_opened_bad\r\n    } else styleCl = styles.door\r\n    return styleCl;\r\n  }\r\n\r\n\r\n\r\nreturn(\r\n    <div className={styleCl} onClick={props.onClick}>\r\n      Дверь {props.id+1}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Door;\r\n","export function shuffle(numPool) {\r\n  let array = [];\r\n  for(\r\n    let j, x, i = numPool.length; i;\r\n    j = parseInt(Math.random() * i),\r\n      x = numPool[--i],\r\n      numPool[i] = numPool[j],\r\n      numPool[j] = x\r\n  );\r\n  array = numPool.map(value => !value);\r\n  return array;\r\n};\r\n","import styles from './Door/Door.module.css';\r\nimport React from \"react\";\r\nimport Door from \"./Door/Door\";\r\nimport { shuffle } from \"../../utils/utils\";\r\n\r\nexport class DoorField extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isChosen: [false, false, false],\r\n      trueArr: shuffle([0,1,2]),\r\n      moveConfirmed: false,\r\n      isOpened: [false, false, false],\r\n      openCount: 0,\r\n      gameResult: 'none',\r\n      roundsCount: 1,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.openCount !== prevState.openCount) {\r\n      this.checkWinner();\r\n    }\r\n  }\r\n\r\n  // Controls\r\n\r\n  handleClick(i) {\r\n  const isChosen = this.state.isChosen.slice().fill(false);\r\n  isChosen[i] = !this.state.isChosen[i];\r\n    const confirmed = function () {\r\n      return (isChosen.includes(true))\r\n    }\r\n  this.setState({\r\n    isChosen: isChosen,\r\n    moveConfirmed: confirmed(),\r\n  })}\r\n\r\n\r\n  confirmActionOnKey(e) {\r\n    if (e.key === ' ') {\r\n      this.confirmAction();\r\n    }\r\n  }\r\n\r\n  confirmAction() {\r\n    if (this.state.gameResult === 'none') {\r\n    const isChosen = this.state.isChosen.slice()\r\n    const confirmed = function () {\r\n      return (isChosen.includes(true))\r\n    }\r\n\r\n     this.setState({\r\n       isChosen: isChosen,\r\n       moveConfirmed: confirmed(),\r\n     })\r\n\r\n    this.openFalseDoor();\r\n  } else {\r\n      this.clearRound();\r\n    }}\r\n\r\n\r\n  openFalseDoor() {\r\n    if (this.state.moveConfirmed) {\r\n    const falseDoorArr = this.state.isOpened.slice();\r\n    const checkFalseDoorArr = (falseDoorArr.includes('open'));\r\n    let count = 0;\r\n      if (!checkFalseDoorArr) {\r\n        for (let i in falseDoorArr) {\r\n          if (!this.state.isChosen[i] && !this.state.trueArr[i] && count < 2) {\r\n            falseDoorArr[i] = 'open';\r\n            count++;\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        for (let i in falseDoorArr) {\r\n          if (!this.state.isChosen[i] && count < 2) {\r\n            falseDoorArr[i] = 'open';\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n    this.setState({\r\n      isOpened: falseDoorArr,\r\n      openCount: count,\r\n    })}\r\n  }\r\n\r\n  checkWinner() {\r\n    const isTrue = this.state.trueArr.slice();\r\n    let isOpened = this.state.isOpened.slice();\r\n    const openCount = this.state.openCount;\r\n    let isChosen = this.state.isChosen.slice();\r\n    let result = this.state.gameResult\r\n\r\n    for (let i in isOpened) {\r\n      if (isOpened[i] === 'open' && isTrue[i] === true) {\r\n        result = 'lose';\r\n        break;\r\n      } else if (openCount > 1) {\r\n        result = 'win';\r\n        isChosen = Array(3).fill(false);\r\n      }\r\n    }\r\n\r\n    if (openCount > 1) {\r\n      isOpened = Array(3).fill('open');\r\n    }\r\n      this.setState({\r\n        gameResult: result,\r\n        isOpened: isOpened,\r\n        isChosen: isChosen,\r\n      })\r\n    };\r\n\r\n  clearRound() {\r\n\r\n    let result = this.state.roundsCount;\r\n    result++;\r\n    this.setState({\r\n      isChosen: [false, false, false],\r\n      trueArr: shuffle([0,1,2]),\r\n      moveConfirmed: false,\r\n      isOpened: [false, false, false],\r\n      openCount: 0,\r\n      gameResult: 'none',\r\n      roundsCount: result,\r\n  })}\r\n\r\n  renderDoor(i){\r\n     return (\r\n    <Door\r\n      id={i}\r\n      isTrue={this.state.trueArr[i]}\r\n      isChosen={this.state.isChosen[i]}\r\n      onClick={() => this.handleClick(i)}\r\n      isOpened={this.state.isOpened[i]}\r\n      gameResult={this.state.gameResult}\r\n     />\r\n     )\r\n  }\r\n\r\n\r\n      render() {\r\n    return (\r\n      <div tabIndex={'-1'} onKeyDown={(e) => this.confirmActionOnKey(e)}>\r\n      <h1 align={\"center\"}>Round {this.state.roundsCount} {(this.state.gameResult === 'none') ? '' : this.state.gameResult.toUpperCase()}</h1>\r\n        <section className={styles.main}>\r\n        <div className={styles.doorField}>\r\n        {this.renderDoor(0)}\r\n        {this.renderDoor(1)}\r\n        {this.renderDoor(2)}\r\n          <button className={styles.doorButton} onClick={() => this.confirmAction()}>{this.state.gameResult !== 'none' ? 'Следующая игра' : 'Продолжить'}</button>\r\n          <button onClick={() => this.clearRound()}>Пропустить раунд</button>\r\n        </div>\r\n          <div style={{\r\n            margin: '20px',\r\n            textAlign: \"center\",\r\n          }}> Make your choice and Press the \"Continue\" button (or \"Space\" instead).\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )}\r\n}\r\n\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport styles from '../HowToPlay/HowToPlay.module.css';\r\n\r\n\r\nexport function ToggleButton (props) {\r\n  let { name, onClick, autoFocus, className } = {...props};\r\n\r\n  return (\r\n    <button autoFocus={autoFocus} className={className} onClick={onClick} >{name}</button>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {ToggleButton} from \"../ToggleButton/ToggleButton\";\r\nimport styles from './HowToPlay.module.css';\r\n\r\nexport function HowToPlay (props) {\r\n\r\n\r\n  let [close, setClosed] = useState({closed: false, style: styles.frame});\r\n\r\n\r\n  function handleClick() {\r\n    setClosed( close = {closed: !close.closed, style: (!close.closed) ? styles.frame_closed : styles.frame})\r\n    }\r\n  function confirmActionOnKey(e) {\r\n    if (e.key === 'Escape') {\r\n      console.log(e.key)\r\n      handleClick();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ToggleButton\r\n        name={'HowToPlay'}\r\n        className={styles.button_open}\r\n        onClick={handleClick}\r\n      />\r\n    <div tabIndex={'-1'} className={close.style} onKeyDown={e => confirmActionOnKey(e)}>\r\n      <div className={styles.wrapper}>\r\n        <h1>Monty-Hall door's game</h1>\r\n        <h3>How to play</h3>\r\n        <ToggleButton\r\n          name={'Esc'}\r\n          className={styles.button_close}\r\n          autoFocus=\"autoFocus\"\r\n          onClick={handleClick}\r\n        />\r\n        <p>There is one <em>Treasure map</em> behind one of this doors! Another two contains bags, full of trash.<br/>\r\n        You should find this map.</p>\r\n        <div className={styles.map}/>\r\n        <h3>Order of moves </h3>\r\n        <ol className={styles.moveList}>\r\n          <li>Choose one of the doors and press 'Continue'</li>\r\n          <li>Your opponent(computer) make his choice by opening one of the doors with a trash.</li>\r\n          <li>Now you could choose again. Pick the same door or another.</li>\r\n        </ol>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {DoorField} from \"./DoorGame/DoorField\";\r\nimport {HowToPlay} from \"./HowToPlay/HowToPlay\";\r\nimport styles from \"./HowToPlay/HowToPlay.module.css\";\r\n\r\nfunction Game () {\r\n\r\n  let [countRounds, setCountRounds] = useState(0)\r\n  let resultCounter = () => {setCountRounds(countRounds++); console.log(countRounds)};\r\n\r\n\r\n  return (\r\n    <div>\r\n      <HowToPlay\r\n      />\r\n      <DoorField\r\n      resultCounter={resultCounter}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Game from \"./components/Game/Game\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Game />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Door_main__RLcZi\",\"doorField\":\"Door_doorField__3k3G1\",\"doorButton\":\"Door_doorButton__CrHEq\",\"door\":\"Door_door__28fVU\",\"door_chosen\":\"Door_door_chosen__197yw\",\"door_opened_good\":\"Door_door_opened_good__3Da-J\",\"door_opened_bad\":\"Door_door_opened_bad__3BA-H\",\"hover\":\"Door_hover__2UYbk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HowToPlay_wrapper__25x0a\",\"moveList\":\"HowToPlay_moveList__NkNV7\",\"map\":\"HowToPlay_map__3D52x\",\"frame\":\"HowToPlay_frame__8A0dt\",\"frame_closed\":\"HowToPlay_frame_closed__1vGTH\",\"button_close\":\"HowToPlay_button_close__DIxCy\",\"button_open\":\"HowToPlay_button_open__29uwq\"};"],"sourceRoot":""}