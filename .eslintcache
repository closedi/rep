[{"C:\\Users\\Admin\\monte-hall\\monte-hall\\src\\index.js":"1","C:\\Users\\Admin\\monte-hall\\monte-hall\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\monte-hall\\monte-hall\\src\\App.js":"3","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\index.js":"4","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\reportWebVitals.js":"5","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\DoorGame\\DoorField.js":"6","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\DoorGame\\Door\\Door.js":"7","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\utils\\utils.js":"8","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\Game.js":"9","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\HowToPlay\\HowToPlay.js":"10","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\ToggleButton\\ToggleButton.js":"11","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\Statistics\\Statictics.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":615,"mtime":1607021859674,"results":"16","hashOfConfig":"14"},{"size":536,"mtime":1609182636422,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":5065,"mtime":1610198990915,"results":"20","hashOfConfig":"18"},{"size":980,"mtime":1610123341836,"results":"21","hashOfConfig":"18"},{"size":286,"mtime":1610198990919,"results":"22","hashOfConfig":"18"},{"size":507,"mtime":1610135255737,"results":"23","hashOfConfig":"18"},{"size":1665,"mtime":1610198990916,"results":"24","hashOfConfig":"18"},{"size":319,"mtime":1609255795274,"results":"25","hashOfConfig":"18"},{"size":1442,"mtime":1610198990917,"results":"26","hashOfConfig":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y0rwqx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1tvftre",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},"C:\\Users\\Admin\\monte-hall\\monte-hall\\src\\index.js",[],"C:\\Users\\Admin\\monte-hall\\monte-hall\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\monte-hall\\monte-hall\\src\\App.js",["57"],"C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\index.js",[],["58","59"],"C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\DoorGame\\DoorField.js",[],"C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\DoorGame\\Door\\Door.js",["60"],"import styles from './Door.module.css';\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction Door(props) {\r\n\r\n  let [styleCl, setStyleCl] = useState(styles.door)\r\n\r\n  useEffect(() => {\r\n    setStyleCl(styleCl = handleClass())\r\n  },[[props.isChosen, props.isOpened]])\r\n\r\n\r\n\r\n  function handleClass() {\r\n    if (props.isChosen === true && props.gameResult === 'none') {\r\n     styleCl = styles.door_chosen\r\n    } else if (props.isChosen === true && props.gameResult !== 'none') {\r\n        styleCl = (props.isTrue) ? styles.door_opened_good : styles.door_opened_bad\r\n    } else if (props.isOpened === 'open' && props.isTrue) {\r\n      styleCl = styles.door_opened_good\r\n    } else if (props.isOpened === 'open' && !props.isTrue) {\r\n      styleCl = styles.door_opened_bad\r\n    } else styleCl = styles.door\r\n    return styleCl;\r\n  }\r\n\r\n\r\n\r\nreturn(\r\n    <div className={styleCl} onClick={props.onClick}>\r\n      Door {props.id+1}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Door;\r\n","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\utils\\utils.js",[],"C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\Game.js",["61","62"],"import React, {useEffect, useState} from \"react\";\r\nimport {DoorField} from \"./DoorGame/DoorField\";\r\nimport {HowToPlay} from \"./HowToPlay/HowToPlay\";\r\nimport styles from \"./HowToPlay/HowToPlay.module.css\";\r\n\r\nfunction Game () {\r\n\r\n  let [countRounds, setCountRounds] = useState(0)\r\n  let resultCounter = () => {setCountRounds(countRounds++)};\r\n\r\n\r\n  return (\r\n    <div>\r\n      <HowToPlay\r\n      />\r\n      <DoorField\r\n      resultCounter={resultCounter}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game;\r\n","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\HowToPlay\\HowToPlay.js",["63"],"import React, { useState, useEffect } from \"react\";\r\nimport {ToggleButton} from \"../ToggleButton/ToggleButton\";\r\nimport styles from './HowToPlay.module.css';\r\n\r\nexport function HowToPlay (props) {\r\n\r\n\r\n  let [close, setClosed] = useState({closed: false, style: styles.frame});\r\n\r\n\r\n  function handleClick() {\r\n    setClosed( close = {closed: !close.closed, style: (!close.closed) ? styles.frame_closed : styles.frame})\r\n    }\r\n  function confirmActionOnKey(e) {\r\n    if (e.key === 'Escape') {\r\n      handleClick();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ToggleButton\r\n        name={'HowToPlay'}\r\n        className={styles.button_open}\r\n        onClick={handleClick}\r\n      />\r\n    <div tabIndex={'-1'} className={close.style} onKeyDown={e => confirmActionOnKey(e)}>\r\n      <div className={styles.wrapper}>\r\n        <h1>Monty-Hall door's game</h1>\r\n        <h3>How to play</h3>\r\n        <ToggleButton\r\n          name={'Esc'}\r\n          className={styles.button_close}\r\n          autoFocus=\"autoFocus\"\r\n          onClick={handleClick}\r\n        />\r\n        <p>There is one <em>Treasure map</em> behind one of this doors! Another two contains bags, full of trash.<br/>\r\n        You should find this map.</p>\r\n        <div className={styles.map}/>\r\n        <h3>Order of moves </h3>\r\n        <ol className={styles.moveList}>\r\n          <li>Choose one of the doors and press 'Continue'</li>\r\n          <li>Your opponent(computer) make his choice by opening one of the doors with a trash.</li>\r\n          <li>Now you could choose again. Pick the same door or another.</li>\r\n        </ol>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\ToggleButton\\ToggleButton.js",["64","65"],"import React, { useEffect } from \"react\";\r\nimport styles from '../HowToPlay/HowToPlay.module.css';\r\n\r\n\r\nexport function ToggleButton (props) {\r\n  let { name, onClick, autoFocus, className } = {...props};\r\n\r\n  return (\r\n    <button autoFocus={autoFocus} className={className} onClick={onClick} >{name}</button>\r\n  )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\proekt\\rep\\src\\components\\Game\\Statistics\\Statictics.js",["66"],"import React, {useState, useEffect} from \"react\";\r\nimport styles from './Statistics.module.css';\r\nimport { winstreak } from \"../../utils/utils\"\r\n\r\nfunction Statistics (props) {\r\n\r\n  let [ ...result ] = props.result;\r\n  // console.log(len)\r\n  // console.log(result)\r\n  const totalWin = result.filter((item => item === 'win')).length\r\n  const totalLose = result.filter((item => item === 'lose')).length\r\n  const winrate = ((Math.round((totalWin / result.length).toFixed(2)*100)))\r\n  const winstreakMax = winstreak(result).max;\r\n  const winstreakCurrent = winstreak(result).current;\r\n\r\n  useEffect(() => {\r\n      renderLine(result)\r\n  }, [result])\r\n\r\n  function renderLine (result) {\r\n    let lines = [];\r\n    for (let i = 0; i < result.length; i++) {\r\n      let lineCl = [];\r\n      if (result[i] === 'none') {\r\n        lineCl[i] = styles.neutral\r\n      } else if (result[i] === 'win') {\r\n        lineCl[i] = styles.win\r\n      } else lineCl[i] = styles.lose\r\n\r\n      lines.unshift(<li key={i} className={lineCl[i]}>\r\n        {`Round ${i + 1}: ${(result[i] === 'none') ? 'skipped' : result[i]}`}</li>)\r\n    }\r\n      return lines;\r\n    }\r\n\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h3 style={{width: '250px'}}>Statistics</h3>\r\n        <p>Rounds played: <span>{result.length}</span></p>\r\n        <p>Win: <span>{totalWin}</span></p>\r\n        <p>Lose: <span>{totalLose}</span></p>\r\n        <p>Winrate: <span>{(isNaN(winrate)) ? '0%' : `${winrate}%`}</span></p>\r\n        <p>Maximum winstreak: <span>{(winstreakMax)}</span></p>\r\n        <p>Current winstreak: <span>{(winstreakCurrent)}</span></p>\r\n        <ul>\r\n          {renderLine(result)}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\nexport default Statistics;\r\n",{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":10,"column":26,"nodeType":"77","endLine":10,"endColumn":39},{"ruleId":"67","severity":1,"message":"78","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"79","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"67","severity":1,"message":"78","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"78","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"67","severity":1,"message":"79","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"80","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":24},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","Assignments to the 'styleCl' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useEffect' is defined but never used.","'styles' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]
